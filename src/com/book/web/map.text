  /**
     * 请求参数的格式是:name=value&name=value
     * action=register&username=admin&password=admin&repwd=admin&email=admin%40qq.com&code=abcde
     * [底层原理分析]
     * 把所有请求的参数封装为 map 返回
     *
     */
    Map<String, String[]> parameterMap = request.getParameterMap();
    // 通过 增强for遍历
//        for (String key : parameterMap.keySet()) {
//            System.out.println( key + " = " + Arrays.asList(parameterMap.get(key)));
//        }
    // Entry 是 Map 集合的一个内部类,它是 map 中的每一个键值对
    // 通过 entry 遍历
    for (Map.Entry<String, String[] > entry : parameterMap.entrySet()){
        System.out.println( entry.getKey() + " = " + Arrays.asList(entry.getValue() ));
    }

    // 7.修改图书的销量和库存
                // 得到原来的商品信息
                Book book = bookDao.queryBookById(cartItems.getId());
                // 修改库存
                book.setStock(book.getStock() - cartItems.getCount());
                // 修改销量
                book.setSales(book.getSales() - cartItems.getCount());
                // 8.保存商品信息
                bookDao.updateBook(book);